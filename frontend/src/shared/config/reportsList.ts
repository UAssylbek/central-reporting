// frontend/src/shared/config/reportsList.ts
import type { ReportConfig } from "../types/reports";

/**
 * Список всех доступных отчётов в системе
 * Названия взяты из старого проекта для совместимости
 */
export const REPORTS_LIST: ReportConfig[] = [
  {
    id: "consolidated_statement",
    title: "Сводная расчетная ведомость",
    description: 'Сводный отчет "Расчетная ведомость организации" предоставляет данные о суммах начислений, отчислений и удержаний работникам организаций, суммах выплат и перечислений в банк, суммах задолженности перед работниками на начало и конец периода формирования отчета.',
    icon: "💰",
    colorScheme: "blue",
    category: "Зарплата и кадры",
  },
  {
    id: "tariff_list",
    title: "Сводный тарификационный список",
    description: 'Сводный отчет "Тарификационный список" предоставляет данные тарификации работников организаций по данным документа "Тарификация".',
    icon: "📋",
    colorScheme: "orange",
    category: "Зарплата и кадры",
  },
  {
    id: "os_balance",
    title: "Сводная ведомость остатков ОС",
    description: 'Сводный отчет "Ведомость остатков долгосрочных активов" предоставляет данные со долгосрочных активах и библиотечном фонде организаций по данным бухгалтерского учета. В отчете отображается количество, первоначальная и текущая стоимость, а так данные амортизации основных средств.',
    icon: "🏢",
    colorScheme: "green",
    category: "Долгосрочные активы",
  },
  {
    id: "long_term_search",
    title: "Поиск долгосрочных активов",
    description: 'Отчет "Поиск долгосрочных активов" осуществляет поиск долгосрочных активов по организациям. Поиск осуществляется по наименованию основного средства. Поддерживается группировка списка долгосрочных активов по организациям, классификациям расходов, счетам бухгалтерского учета.',
    icon: "🔍",
    colorScheme: "purple",
    category: "Долгосрочные активы",
  },
  {
    id: "tmz_balance",
    title: "Сводная ведомость остатков ТМЗ",
    description: 'Сводный отчет "Ведомость остатков товарно-материальных запасов" предоставляет данные о количестве и стоимости товаров и запасов организаций по данным бухгалтерского учета. Поддерживается детализация данных в разрезе организаций, классификаций расходов, счетов бухгалтерского учета.',
    icon: "📦",
    colorScheme: "indigo",
    category: "Номенклатура и склад",
  },
  {
    id: "expense_report",
    title: "Отчет по расходам по форме 4-20",
    description: "Отчет предоставляет данные плана финансирования администратора бюджетных программ и кассового исполнения по форме 4-20. Поддерживается детализация отчета в разрезе бюджетов, администраторов бюджетных программ, организаций, кодов бюджетной классификации расходов (КБК).",
    icon: "💸",
    colorScheme: "red",
    category: "Банк и касса",
  },
  {
    id: "cash_flow",
    title: "Сводный отчет об исполнении денежных средств",
    description: "Сводный отчет о движении денежных средств организаций за период.",
    icon: "💳",
    colorScheme: "cyan",
    category: "Банк и касса",
  },
  {
    id: "employee_list",
    title: "Сводный список работников организации",
    description: 'Отчет "Сводный список работников организации" предоставляет полный реестр сотрудников всех организаций.',
    icon: "👥",
    colorScheme: "pink",
    category: "Зарплата и кадры",
  },
  {
    id: "debt_report",
    title: "Сводный отчет по дебиторской и кредиторской задолженности",
    description: "Анализ дебиторской и кредиторской задолженности организаций.",
    icon: "📊",
    colorScheme: "yellow",
    category: "Банк и касса",
  },
];

/**
 * Получить конфигурацию отчёта по ID
 */
export function getReportConfig(reportId: string): ReportConfig | undefined {
  return REPORTS_LIST.find((report) => report.id === reportId);
}

/**
 * Получить отчёты по категории
 */
export function getReportsByCategory(category: string): ReportConfig[] {
  return REPORTS_LIST.filter((report) => report.category === category);
}

/**
 * Получить все категории отчётов
 */
export function getReportCategories(): string[] {
  const categories = REPORTS_LIST.map((report) => report.category).filter(
    Boolean
  ) as string[];
  return Array.from(new Set(categories));
}